System.register(["@angular/core","@angular/http","rxjs/Observable"],function(t,e){"use strict";var r,n,o,i,s=(e&&e.id,this&&this.__decorate||function(t,e,r,n){var o,i=arguments.length,s=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,r,n);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(i<3?o(s):i>3?o(e,r,s):o(e,r))||s);return i>3&&s&&Object.defineProperty(e,r,s),s}),a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};return{setters:[function(t){r=t},function(t){n=t},function(t){o=t}],execute:function(){i=function(){function t(t){this.http=t,this.loungeBaseUrl="api/lounge/",this.placeBaseUrl="api/place/"}return t.prototype.getLatestDiscussion=function(t){var e=this.loungeBaseUrl+"GetLatestDiscussion/";return null!=t&&(e+=t),this.http.get(e).map(function(t){return t.json()})["catch"](this.handleError)},t.prototype.getDiscussion=function(t){if(null==t)throw new Error("id is required.");var e=this.loungeBaseUrl+t;return this.http.get(e).map(function(t){return t.json()})["catch"](this.handleError)},t.prototype.getLatestEntries=function(t){var e=this.placeBaseUrl+"GetLatestEntries/";return null!=t&&(e+=t),this.http.get(e).map(function(t){return t.json()})["catch"](this.handleError)},t.prototype.getMostViewed=function(t){var e=this.placeBaseUrl+"GetMostViewed/";return null!=t&&(e+=t),this.http.get(e).map(function(t){return t.json()})["catch"](this.handleError)},t.prototype.getPlace=function(t){if(null==t)throw new Error("id is required.");var e=this.placeBaseUrl+t;return this.http.get(e).map(function(t){return t.json()})["catch"](this.handleError)},t.prototype.handleError=function(t){return console.error(t),o.Observable["throw"](t.json().error||"Server error")},t=s([r.Injectable(),a("design:paramtypes",[n.Http])],t)}(),t("AppService",i)}}});
//# sourceMappingURL=app.service.js.map
